selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression

new_variables:
  ### [format] name: formula
  ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
  # old ones
   jets_mask: ak.ones_like(jets_E)
   jets_pt_log: np.log(jets_pt)
   jets_E_log: np.log(jets_E)

preprocess:
  ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
  method: manual
  ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
  data_fraction: 0.5

inputs:
   pf_points:
      length: 8
      pad_mode: wrap
      vars:
         - [jets_eta, null]
         - [jets_phi, null]
   pf_features:
      length: 8
      pad_mode: wrap
      vars: 
      ### [format 1]: var_name (no transformation)
      ### [format 2]: [var_name, 
      ###              subtract_by(optional, default=None, no transf. if preprocess.method=manual, auto transf. if preprocess.method=auto), 
      ###              multiply_by(optional, default=1), 
      ###              clip_min(optional, default=-5), 
      ###              clip_max(optional, default=5), 
      ###              pad_value(optional, default=0)]
         - [jets_pt_log, 1.7, 0.7]
         - [jets_E_log, 2.0, 0.7]
         - [jets_eta, null]
         - [jets_phi, null]
         - [jets_DL1dv01, null]
   pf_vectors:
      length: 8
      pad_mode: wrap
      vars: 
         - [jets_px, null]
         - [jets_py, null]
         - [jets_pz, null]
         - [jets_E, null]
   pf_mask:
      length: 8
      pad_mode: constant
      vars: 
         - [jets_mask, null]

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   type: simple
   value: [Pair012345, Pair012435, Pair012534, Pair021345, Pair021435, Pair021534, Pair031245, Pair031425, Pair031524, Pair041235, Pair041325, Pair041523, Pair051234, Pair051324, Pair051423, PairLess3]

   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value:
   #    truth_label: label.argmax(1)

observers:
  - mcEventNumber
  - mcEventWeight
  - nBTags
  - truth_mHHH


weights:
